---
title: Creating Multiple Routes and Dynamic Content in Flask
description: |
  How to make Flask web app with multiple pages and dynamic endpoints.
objectives:
  - How to define multiple routes in a Flask web app.
  - How to define a route that can generate pages dynamically based on string values in the path string.
summary: |
  Up to this point, the kind of Flask apps we've built literally do nothing more than just respond with HTML-shaped text, which means they haven't done anything that we couldn't do by just writing HTML and saving it as a text file and skipping the whole Python part.  
---

Let's revisit the __app.py__ for the most basic Flask app. Try to rewrite it from scratch, just from memory:

~~~py
from flask import Flask
app = Flask(__name__)

@app.route('/')
def homepage():
    return """<h1>Hello world!</h1>"""

if __name__ == '__main__':
    app.run(use_reloader=True)
~~~


We'll be complicating __app.py__ in this lesson so if you don't understand all the moving parts in the Flask app yet, you should at least be familiar enough to know what's being repeated and changed and expanded upon.


# Creating multiple routes

http://flask.pocoo.org/docs/0.10/quickstart/#routing

To add a new route, simply call the `route()` function again with the desired path and create a view function for it:

~~~py
@app.route('/stanford')
def stanford_page():
    return """<h1>Hello stanford!</h1>"""

@app.route('/in-n-out')
def in_n_out_page():
    return """<h1>Hello in-n-out!</h1>"""
~~~

## Working with external content and (simple) APIs

Generating our own content by hand can get a little tiring. Besides including images from other sites (i.e. )

So let's include an image





# Creating routes with variables

http://flask.pocoo.org/docs/0.10/quickstart/#variable-rules

> To add variable parts to a URL you can mark these special sections as <variable_name>. Such a part is then passed as a keyword argument to your function.





